
##
## This file is part of the `liip/LiipImagineBundle` project.
##
## (c) https://github.com/liip/LiipImagineBundle/graphs/contributors
##
## For the full copyright and license information, please view the LICENSE.md
## file that was distributed with this source code.
##

#
# define language runtime for tests
#
language: php

#
# indicate that these instructions do not require privilege escalation
#
sudo: false

#
# route build to ubuntu 16.04 containers
#
dist: xenial

#
# cache the results of a build for subsequent builds
#
cache:
  directories:

    #
    # cache composer data from a dependency resolution run, enabling subsequent builds to avoid repeating some of the
    # costly remote requests required for the process
    #
    - ${HOME}/.composer/cache

#
# define global environment variables
#
env:
  global:

    #
    # codecov: php-coveralls global configuration defaults
    #
    - CODECOV_BIN_RUNS=0
    - CODECOV_XML_FILE="./var/build/clover.xml"
    - CODECOV_OUT_FILE="${CODECOV_XML_FILE}.coveralls-upload.json"
    - CODECOV_BIN_PATH="./vendor/bin/php-coveralls"
    - CODECOV_BIN_OPTS="-vvv --no-interaction --ansi -x ${CODECOV_XML_FILE} -o ${CODECOV_OUT_FILE}"

    #
    # compose: composer global configuration defaults
    #
    - COMPOSE_BIN_RUNS=1
    - COMPOSE_BIN_PATH="composer"
    - COMPOSE_BIN_OPTS="-vvv --no-interaction --ansi"
    - COMPOSE_REQ_OPTS="--no-update"
    - COMPOSE_UPD_OPTS="--prefer-dist --no-suggest"
    - COMPOSE_REM_OPTS="--no-update"
    - COMPOSE_MIN_STAB=""
    - COMPOSE_SYM_VERS="dev-master"

    #
    # phpunit: simple-phpunit global configuration defaults
    #
    - PHPUNIT_BIN_RUNS=1
    - PHPUNIT_BIN_PATH="./vendor/bin/simple-phpunit"
    - PHPUNIT_BIN_OPTS="-vvv"
    - PHPUNIT_COV_OPTS="--coverage-text --coverage-clover ${CODECOV_XML_FILE}"

    #
    # csfixer: php-cs-fixer global configuration defaults
    #
    - CSFIXER_BIN_RUNS=0
    - CSFIXER_BIN_PATH="./vendor/bin/php-cs-fixer"
    - CSFIXER_BIN_OPTS="-vvv --no-interaction --ansi --diff --diff-format=sbd --dry-run"

    #
    # symfony: phpunit-helper global configuration defaults
    #
    - SYMFONY_DEPRECATIONS_HELPER="weak_vendors"

#
# define build matrix
#
matrix:

  #
  # finish build early by ignoring status of allowed failures
  #
  fast_finish: true

  #
  # build environments
  #
  include:



    - name: '[zend@7.0] unit-tests'
      php:  7.0

    - name: '[zend@7.0] unit-tests (deps:lowest)'
      php:  7.0
      env:
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} symfony/phpunit-bridge:^4.2"
        - COMPOSE_BIN_OPTS="${COMPOSE_BIN_OPTS} --prefer-lowest"

    - name: '[zend@7.1] unit-tests'
      php:  7.1

    - name: '[zend@7.1] unit-tests (deps:lowest)'
      php:  7.1
      env:
        - COMPOSE_SYM_VERS="4.0.*"
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} symfony/phpunit-bridge:^4.2"
        - COMPOSE_BIN_OPTS="${COMPOSE_BIN_OPTS} --prefer-lowest"

    - name: '[zend@7.2] unit-tests'
      php:  7.2

    - name: '[zend@7.2] unit-tests (symfony:3.4.*)'
      php:  7.2
      env:
        - COMPOSE_SYM_VERS="3.4.*"

    - name: '[zend@7.2] unit-tests (symfony:4.0.*)'
      php:  7.2
      env:
        - COMPOSE_SYM_VERS="4.0.*"

    - name: '[zend@7.2] unit-tests (symfony:4.1.*)'
      php:  7.2
      env:
        - COMPOSE_SYM_VERS="4.1.*"

    - name: '[zend@7.2] unit-tests (symfony:4.2.*)'
      php:  7.2
      env:
        - COMPOSE_SYM_VERS="4.2.*"

    - name: '[zend@7.3] unit-tests'
      php:  7.3

    - name: '[zend@7.3] unit-tests (deps:no-dev)'
      php:  7.3
      env:
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} symfony/phpunit-bridge:^4"
        - COMPOSE_UPD_OPTS="${COMPOSE_UPD_OPTS} --no-dev"

    - name: '[zend@7.1] deps-audit'
      php:  7.1
      env:
        - PHPUNIT_BIN_RUNS=0
        - CSFIXER_BIN_RUNS=0
        - CODECOV_BIN_RUNS=0
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} roave/security-advisories:dev-master"

    - name: '[zend@7.2] deps-audit'
      php:  7.2
      env:
        - PHPUNIT_BIN_RUNS=0
        - CSFIXER_BIN_RUNS=0
        - CODECOV_BIN_RUNS=0
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} roave/security-advisories:dev-master"

    - name: '[zend@7.3] deps-audit'
      php:  7.3
      env:
        - PHPUNIT_BIN_RUNS=0
        - CSFIXER_BIN_RUNS=0
        - CODECOV_BIN_RUNS=0
        - COMPOSE_REQ_DEPS="${COMPOSE_REQ_DEPS} roave/security-advisories:dev-master"

    - name: '[zend@7.2] code-style'
      php:  7.1
      env:
        - CSFIXER_BIN_RUNS=1
        - PHPUNIT_BIN_RUNS=0

    - name: '[zend@7.2] code-cover'
      php:  7.2
      env:
        - CODECOV_BIN_RUNS=1
        - PHPUNIT_BIN_OPTS="${PHPUNIT_BIN_OPTS} ${PHPUNIT_COV_OPTS}"

    - name: '[zend@7.2] unit-tests (stability:dev; symfony:4.*; allows:failure)'
      php:  7.2
      env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"

    - name: '[zend@7.4snapshot] unit-tests (stability:dev; symfony:4.*; allows:failure)'
      php:  7.4snapshot
      env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"

    - name: '[zend@nightly] unit-tests (stability:dev; symfony:4.*; allows:failure)'
      php:  nightly
      env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"

    - name: '[hhvm@current] unit-tests (allows:failure)'
      php:  hhvm
      env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"
        - COMPOSE_BIN_OPTS="${COMPOSE_BIN_OPTS} --ignore-platform-reqs"

    - name: '[hhvm@nightly] unit-tests (allows:failure)'
      php:  hhvm-nightly
      env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"
        - COMPOSE_BIN_OPTS="${COMPOSE_BIN_OPTS} --ignore-platform-reqs"

  #
  # build environments that may fail
  #
  allow_failures:

    - env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"

    - env:
        - COMPOSE_SYM_VERS="4.*"
        - COMPOSE_MIN_STAB="dev"
        - COMPOSE_BIN_OPTS="${COMPOSE_BIN_OPTS} --ignore-platform-reqs"

#
# testing step: setup environment
#
before_install:

  - if [[ -n ${COMPOSE_SYM_VERS} ]]; then
      travis_retry ${COMPOSE_BIN_PATH} require ${COMPOSE_BIN_OPTS} ${COMPOSE_REQ_OPTS} symfony/symfony:${COMPOSE_SYM_VERS};
    fi
  - if [[ -n ${COMPOSE_REQ_DEPS} ]]; then
      travis_retry ${COMPOSE_BIN_PATH} require ${COMPOSE_BIN_OPTS} ${COMPOSE_REQ_OPTS} ${COMPOSE_REQ_DEPS};
    fi
  - if [[ -n ${COMPOSE_MIN_STAB} ]]; then
      travis_retry ${COMPOSE_BIN_PATH} config ${COMPOSE_BIN_OPTS} minimum-stability ${COMPOSE_MIN_STAB};
    fi
  - if [[ ${CODECOV_BIN_RUNS} -eq 0 ]]; then
      phpenv config-rm xdebug.ini || true;
    fi
  - if [[ ${CODECOV_BIN_RUNS} -eq 1 ]]; then
      travis_retry ${COMPOSE_BIN_PATH} remove ${COMPOSE_BIN_OPTS} ${COMPOSE_REM_OPTS} --dev satooshi/php-coveralls;
    fi

#
# testing step: install configured environment
#
install:

  - if [[ ${COMPOSE_BIN_RUNS} -eq 1 ]]; then
      travis_retry ${COMPOSE_BIN_PATH} update ${COMPOSE_BIN_OPTS} ${COMPOSE_UPD_OPTS};
    fi
  - if [[ ${PHPUNIT_BIN_RUNS} -eq 1 ]]; then
      travis_retry ${PHPUNIT_BIN_PATH} install || true;
    fi

#
# testing step: run unit tests and/or code-style checks
#
script:

  - if [[ ${PHPUNIT_BIN_RUNS} -eq 1 ]]; then
      ${PHPUNIT_BIN_PATH} ${PHPUNIT_BIN_OPTS};
    fi
  - if [[ ${CSFIXER_BIN_RUNS} -eq 1 ]]; then
      ${CSFIXER_BIN_PATH} fix ${CSFIXER_BIN_OPTS};
    fi

#
# testing step: submit test code coverage report
#
after_success:

  - if [[ ${PHPUNIT_BIN_RUNS} -eq 1 ]] && [[ ${CODECOV_BIN_RUNS} -eq 1 ]]; then
      travis_retry ${CODECOV_BIN_PATH} ${CODECOV_BIN_OPTS};
    fi
